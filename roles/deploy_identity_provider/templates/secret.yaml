apiVersion: v1
kind: Secret
metadata:
  name: {{ k8s_name }}
  namespace: {{ k8s_namespace }}
stringData:
  configuration.yml: |
    regulation:
      max_retries: 3
      find_time: 2m
      ban_time: 5m
    jwt_secret: {{ jwt_secret }}
    server:
      host: 0.0.0.0
      port: {{ app_port }}

    log:
      level: debug
    authentication_backend:
      file:
        path: /config/users_database.yml
      password_reset:
        disable: true
    access_control:
      default_policy: one_factor
    session:
      secret: {{ session_secret }}
      domain: {{ hostname }}
      expiration: 1h
    # TODO: make this on PVC and backup it
    storage:
      encryption_key: {{ encryption_key }}
      local:
        path: /tmp/db.sqlite3
    notifier:
      disable_startup_check: false
      filesystem:
        filename: /tmp/notification.txt
    identity_providers:
      oidc:
        hmac_secret: {{ hmac_secret }}
        issuer_private_key: |
          {{ open_id_connect_issuer_private_key | indent(10) }}
        refresh_token_lifespan: 7d
        enforce_pkce: always
        clients:
{% for client in open_id_connect_clients %}
          - id: {{ client.id }}
            secret: {{ client.secret }}
            authorization_policy: one_factor
            audience:
              - {{ client.id }}
            scopes:
              - openid
              - offline_access
              - groups
              - profile
              - email
            redirect_uris:
              {{ client.redirect_uris | to_nice_yaml(indent=2) | indent(14) }}
{% endfor %}
  users_database.yml: |
    users:
      {{ user_database.result | to_nice_yaml(indent=2) | indent(6) }}