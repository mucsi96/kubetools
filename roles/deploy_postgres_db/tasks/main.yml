- name: Create k8s namespace
  delegate_to: localhost
  kubernetes.core.k8s:
    state: present
    kind: namespace
    name: "{{ k8s_namespace }}"
- name: Get checksums
  ansible.builtin.set_fact:
    secret_checksum: "{{ lookup('ansible.builtin.template', 'secret.yaml') | checksum }}"
    original_k8s_name: "{{ k8s_name }}"
  vars:
    k8s_name: "{{ db_host }}"
    app_port: "{{ db_port }}"
- name: Add kubernetes resources
  delegate_to: localhost
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('ansible.builtin.template', item) }}"
    wait: true
  with_items:
    - persistent_volume_claim.yaml
    - secret.yaml
    - deployment.yaml
    - service.yaml
    - service_monitor.yaml
  vars:
    k8s_name: "{{ db_host }}"
    app_port: "{{ db_port }}"
- name: Deploy Postgress backup tool
  ansible.builtin.include_role:
    name: deploy_spring_app
  vars:
    k8s_name: "{{ original_k8s_name }}-postgres-backup-tool"
    image: mucsi96/postgres-backup-tool
    app_env:
      AWS_S3_ENDPOINT_URL: "{{ db_backup_endpoint_url }}"
      AWS_S3_ACCESS_KEY_ID: "{{ db_backup_access_key_id }}"
      AWS_S3_SECRET_ACCESS_KEY: "{{ db_backup_secret_access_key }}"
      AWS_S3_BUCKET: "{{ db_backup_bucket }}"
      AWS_S3_REGION: "{{ db_backup_region }}"
      POSTGRES_HOSTNAME: "{{ db_host }}"
      POSTGRES_PORT: "{{ db_port }}"
      POSTGRES_DB: "{{ db_name }}"
      POSTGRES_USER: "{{ db_username }}"
      POSTGRES_PASSWORD: "{{ db_password }}"
      EXCLUDE_TABLES: "{{ db_backup_exclude_tables | join(',') }}"
    base_path: "/db"
- name: Setup backup cron jobs
  delegate_to: localhost
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('ansible.builtin.template', item) }}"
    wait: true
  with_items:
    - daily_backup.yaml
    - monthly_backup.yaml
    - weekly_cleanup.yaml
  vars:
    k8s_name: "{{ original_k8s_name }}"

