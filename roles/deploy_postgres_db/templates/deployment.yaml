apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ k8s_name }}
  namespace: {{ k8s_namespace }}
spec:
  selector:
    matchLabels:
      app: {{ k8s_name }}
  template:
    metadata:
      labels:
        app: {{ k8s_name }}
      annotations:
        checksum/secret: {{ secret_checksum }}
    spec:
      containers:
      - name: {{ k8s_name }}
        image: postgres:15
        resources:
          requests:
            memory: 200Mi
            cpu: 20m
          limits:
            memory: 300Mi
            cpu: 500m
        ports:
        - name: http
          containerPort: 5432
        env:
          - name: POSTGRES_DB
            value: {{ db_name }}
          - name: POSTGRES_USER
            valueFrom:
              secretKeyRef:
                name: {{ k8s_name }}
                key: username
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ k8s_name }}
                key: password
        volumeMounts:
          - name: ssv
            mountPath: /var/lib/postgresql
          - name: initdb
            mountPath: /docker-entrypoint-initdb.d
      - name: {{ k8s_name }}-prometheus-exporter
        image: prometheuscommunity/postgres-exporter:v0.11.1
        ports:
          - name: metrics
            containerPort: 9187
        env:
          - name: POSTGRES_DB
            value: {{ db_name }}
          - name: POSTGRES_USER
            valueFrom:
              secretKeyRef:
                name: {{ k8s_name }}
                key: exporterUsername
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ k8s_name }}
                key: exporterPassword
          - name: DATA_SOURCE_NAME
            value: postgresql://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@localhost:5432/$(POSTGRES_DB)?sslmode=disable
        livenessProbe:
          httpGet:
            path: /
            port: metrics
          initialDelaySeconds: 15
        startupProbe:
          httpGet:
            path: /
            port: metrics
          initialDelaySeconds: 5
      volumes:
      - name: ssv
        persistentVolumeClaim:
          claimName: {{ k8s_name }}
      - name: initdb
        secret:
          secretName: {{ k8s_name }}
          items:
            - key: initdb_sql
              path: initdb.sql
            - key: grant_sql
              path: grant.sql
