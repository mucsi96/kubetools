- name: SSH Port Juggle
  wait_for_connection:
    timeout: 1
  ignore_errors: true
  register: _ssh_port_result

- name: Check if target SSH key already exists
  ansible.builtin.stat:
    path: "{{ private_key_file }}"
  delegate_to: localhost
  register: private_key_file_stat

- name: Create folder for temp SSH Key
  ansible.builtin.file:
    path: /tmp/.ssh
    state: directory
    mode: 0777
  delegate_to: localhost
  when: not private_key_file_stat.stat.exists
- name: Generate SSH key
  community.crypto.openssh_keypair:
    path: /tmp/.ssh/id_ed25519
    type: ed25519
    state: present
    mode: 0600
  delegate_to: localhost
  when: not private_key_file_stat.stat.exists
- name: Create folder for target SSH Key
  ansible.builtin.file:
    path: "{{ private_key_file | dirname }}"
    state: directory
    mode: 0777
  delegate_to: localhost
  when: not private_key_file_stat.stat.exists
- name: Copy SSH private key
  ansible.builtin.copy:
    src: /tmp/.ssh/id_ed25519
    dest: "{{ private_key_file }}"
    mode: 0600
  delegate_to: localhost
  when: not private_key_file_stat.stat.exists
- name: Copy SSH public key
  ansible.builtin.copy:
    src: /tmp/.ssh/id_ed25519.pub
    dest: "{{ private_key_file }}.pub"
    mode: 0600
  delegate_to: localhost
  when: not private_key_file_stat.stat.exists
- name: Install sudo package
  become: true
  ansible.builtin.apt:
    name: sudo
    state: present
  when: ansible_os_family == 'Debian'
- name: Make sure we have a 'wheel' group
  ansible.builtin.group:
    name: wheel
    state: present
  when: _ssh_port_result is succeeded
- name: Enable wheel group
  become: true
  ansible.builtin.lineinfile:
    dest: /etc/sudoers
    regexp: "^#?%wheel"
    line: "%wheel ALL=(ALL) NOPASSWD:ALL"
    state: present
  when: _ssh_port_result is succeeded
- name: Create deploy user
  become: true
  ansible.builtin.user:
    name: "{{ username }}"
    state: present
    password: "{{ password | password_hash('sha512', 65534 | random(seed=inventory_hostname) | string) }}"
    groups: wheel
    append: true
  vars:
    password: "{{ lookup('ansible.builtin.password', '/dev/null', seed='{{ inventory_hostname }}-{{ username }}-password') }}"
  when: _ssh_port_result is succeeded
- name: Enable SSH key auth
  become: true
  ansible.posix.authorized_key:
    user: "{{ username }}"
    state: present
    key: "{{ lookup('file', public_key_file) }}"
  vars:
    public_key_file: "{{ private_key_file }}.pub"
  when: _ssh_port_result is succeeded
